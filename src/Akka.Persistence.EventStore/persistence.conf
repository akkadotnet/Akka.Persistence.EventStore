akka.persistence {
	journal {
		eventstore {
			# qualified type name of the EventStore persistence journal actor
			class = "Akka.Persistence.EventStore.Journal.EventStoreJournal, Akka.Persistence.EventStore"

			# connection string used for database access
			connection-string = ""
			
			# dispatcher used to drive journal actor
			plugin-dispatcher = "akka.actor.default-dispatcher"
			
			# Adapter to use to map Akka message to/from EventStore (see README)
			# (default | assembly qualified class name)
			adapter = "default"

			auto-initialize = false
			
			prefix = ""
			tenant = ""

			tagged-stream-name-pattern = "tagged-[[TAG]]"
			persistence-ids-stream-name = "persistenceids"
			persisted-events-stream-name = "persistedevents"
		}
	}

	query.journal.eventstore {
		# Implementation class of the EventStore ReadJournalProvider
		class = "Akka.Persistence.EventStore.Query.EventStoreReadJournalProvider, Akka.Persistence.EventStore"

		# Absolute path to the write journal plugin configuration entry that this 
		# query journal will connect to. 
		# If undefined (or "") it will connect to the default journal as specified by the
		# akka.persistence.journal.plugin property.
		write-plugin = ""

		refresh-interval = 5s
	}

	eventstore.tenant {
		tenant-stream-name-pattern = "[[STREAM_NAME]]@[[TENANT_NAME]]"
	}
}